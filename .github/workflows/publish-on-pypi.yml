name: Publish on PyPI

on:
  push:

jobs:
  publish:
    runs-on: ubuntu-latest
    environment:
      name: release

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "0.5.4"

      - name: Set up Python 3.11
        run: uv python install 3.11

      - name: Install dependencies
        run: uv sync

      - name: Build
        run: uv build

      - name: Get version from pyproject.toml
        run: echo "VERSION=$(uvx --from=toml-cli toml get --toml-path=pyproject.toml project.version)" >> $GITHUB_ENV

      - name: Check version matches tag
        if: ${{ ! contains(github.ref, env.VERSION) }}
        run: |
          echo "Git tag does not match version in pyproject.toml"
          exit 1

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: steps.check-prerelease.outputs.prerelease == 'true'
          skipIfReleaseExists: true

      - name: Publish to PyPI
        run: uv publish
